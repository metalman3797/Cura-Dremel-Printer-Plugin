####################################################################
# Dremel Ideabuilder 3D20 plugin for Ultimaker Cura
# A plugin to enable Cura to write .g3drem files for
# the Dremel IdeaBuilder 3D20
#
# Written by Tim Schoenmackers
# Based on the GcodeWriter plugin written by Ultimaker
#
# the GcodeWriter plugin source can be found here:
# https://github.com/Ultimaker/Cura/tree/master/plugins/GCodeWriter
#
# This plugin is released under the terms of the LGPLv3 or higher.
# The full text of the LGPLv3 License can be found here:
# https://github.com/timmehtimmeh/Cura-Dremel-3D20-Plugin/blob/master/LICENSE
####################################################################

import os # for listdir
import os.path # for isfile and join and path
import sys
import zipfile
import shutil  # For deleting plugin directories;
import stat    # For setting file permissions correctly;
import re #For escaping characters in the settings.
import json
import copy
import struct
import time

from distutils.version import StrictVersion # for upgrade installations

from UM.i18n import i18nCatalog
from UM.Application import Application
from UM.Extension import Extension
from UM.Message import Message
from UM.Resources import Resources
from UM.Logger import Logger
from UM.Preferences import Preferences
from UM.Mesh.MeshWriter import MeshWriter
from UM.Settings.InstanceContainer import InstanceContainer
from UM.Qt.Duration import DurationFormat
from UM.Qt.Bindings.Theme import Theme

from PyQt5.QtWidgets import QApplication, QFileDialog
from PyQt5.QtGui import QPixmap, QScreen, QColor, qRgb, QImageReader, QImage
from PyQt5.QtCore import QByteArray, QBuffer, QIODevice, QRect, Qt, QSize, pyqtSlot, QObject

from . import G3DremHeader

catalog = i18nCatalog("cura")

version = "0.4.0"

##      This Extension runs in the background and sends several bits of information to the Ultimaker servers.
#       The data is only sent when the user in question gave permission to do so. All data is anonymous and
#       no model files are being sent (Just a SHA256 hash of the model).
class Dremel3D20(MeshWriter, Extension):
    ##  The file format version of the serialised g-code.
    version = 3

    ##  Dictionary that defines how characters are escaped when embedded in
    #   g-code.
    #
    #   Note that the keys of this dictionary are regex strings. The values are
    #   not.
    escape_characters = {
        re.escape("\\"): "\\\\",  # The escape character.
        re.escape("\n"): "\\n",   # Newlines. They break off the comment.
        re.escape("\r"): "\\r"    # Carriage return. Windows users may need this for visualisation in their editors.
    }

    def __init__(self):
        super().__init__()
        if Preferences.getInstance().getValue("Dremel3D20/select_screenshot") is None:
            Preferences.getInstance().addPreference("Dremel3D20/select_screenshot", False)

        if Preferences.getInstance().getValue("Dremel3D20/last_screenshot_folder") is None:
            Preferences.getInstance().addPreference("Dremel3D20/last_screenshot_folder",str(os.path.expanduser('~')))
        Logger.log("i", "Dremel3D20 Plugin adding menu item for screenshot toggling")
        self.addMenuItem(catalog.i18nc("@item:inmenu", "Toggle Manual Screenshot Selection"), self.setSelectScreenshot)

        self.this_plugin_path = None
        self.local_meshes_path = None
        self.local_printer_def_path = None
        self.local_materials_path = None
        self.local_quality_path = None
        Logger.log("i", "Dremel 3D20 Plugin setting up")
        local_plugin_path = os.path.join(Resources.getStoragePath(Resources.Resources), "plugins")
        self.this_plugin_path=os.path.join(local_plugin_path,"Dremel3D20","Dremel3D20")
        local_meshes_paths = Resources.getAllPathsForType(Resources.Meshes)

        for path in local_meshes_paths:
            if os.path.isdir(path):
                self.local_meshes_path = path
        self.local_printer_def_path = Resources.getStoragePath(Resources.DefinitionContainers)
        self.local_materials_path = os.path.join(Resources.getStoragePath(Resources.Resources), "materials")
        self.local_quality_path = os.path.join(Resources.getStoragePath(Resources.Resources), "quality")

        # Check to see if the user had installed the plugin from an old version
        bExit = False
        for fil in self.oldVersionInstalled():
            Logger.log("i", "Dremel 3D20 Plugin found files from previous install: " + fil)
            message = Message(catalog.i18nc("@info:status", "Old Dremel IdeaBuilder 3D20 files detected.  Please delete "+ fil))
            message.show()
            bExit = True

        if bExit:
            return False

        if Preferences.getInstance().getValue("Dremel3D20/install_status") is None:
            Preferences.getInstance().addPreference("Dremel3D20/install_status", "unknown")

        # if something got messed up, set back to reasonable values
        if not self.isInstalled() and Preferences.getInstance().getValue("Dremel3D20/install_status") is "installed":
            Preferences.getInstance().setValue("Dremel3D20/install_status", "unknown")

        # if it's installed, and it's listed as uninstalled, then change that to reflect the truth
        if self.isInstalled() and Preferences.getInstance().getValue("Dremel3D20/install_status") is "uninstalled":
            Preferences.getInstance().setValue("Dremel3D20/install_status", "installed")

        # if the version isn't the same, then force installation
        if self.isInstalled() and not self.versionsMatch():
            Preferences.getInstance().setValue("Dremel3D20/install_status", "unknown")

        # Check the preferences to see if the user uninstalled the files -
        # if so don't automatically install them
        if Preferences.getInstance().getValue("Dremel3D20/install_status") is "unknown":
            # if the user never installed the files, then automatically install it
            self.installPluginFiles()

        # check to see that the install succeeded - if so change the menu item options
        if os.path.isfile(os.path.join(self.local_printer_def_path,"Dremel3D20.def.json")):
            Logger.log("i", "Dremel 3D20 Plugin adding menu item for uninstallation")
            self.addMenuItem(catalog.i18nc("@item:inmenu", "Uninstall Dremel3D20 Printer Files"), self.uninstallPluginFiles)
        else:
            Logger.log("i", "Dremel 3D20 Plugin adding menu item for installation")
            self.addMenuItem(catalog.i18nc("@item:inmenu", "Install Dremel3D20 Printer"), self.installPluginFiles)

        self.addMenuItem(catalog.i18nc("@item:inmenu", "Dremel Printer Plugin Version "+version), self.getFileVersion)
        # finally save the cura.cfg file
        Preferences.getInstance().writeToFile(Resources.getStoragePath(Resources.Preferences, Application.getInstance().getApplicationName() + ".cfg"))

    # silly function so that the menu can display the version
    def getFileVersion(self):
        return

    def oldVersionInstalled(self):
        cura_dir=os.path.dirname(os.path.realpath(sys.argv[0]))
        dremelDefinitionFile=os.path.join(cura_dir,"resources","definitions","Dremel3D20.def.json")
        dremelMaterialFile=os.path.join(cura_dir,"resources","materials","dremel_pla.xml.fdm_material")
        dremelQualityFolder=os.path.join(cura_dir,"resources","quality","dremel_3d20")
        ret = []
        if os.path.isfile(dremelDefinitionFile):
            ret.append(dremelDefinitionFile)
        if os.path.isfile(dremelMaterialFile):
            ret.append(dremelMaterialFile)
        if os.path.isdir(dremelQualityFolder):
            ret.append(dremelQualityFolder)
        return ret

    # returns true if the versions match and false if they don't
    def versionsMatch(self):
        # get the currently installed plugin version number
        if Preferences.getInstance().getValue("Dremel3D20/curr_version") is None:
            Preferences.getInstance().addPreference("Dremel3D20/curr_version", "0.0.0")

        installedVersion = Preferences.getInstance().getValue("Dremel3D20/curr_version")

        if StrictVersion(installedVersion) == StrictVersion(version):
            # if the version numbers match, then return true
            Logger.log("i", "Dremel 3D20 Plugin versions match: "+installedVersion+" matches "+version)
            return True
        else:
            Logger.log("i", "Dremel 3D20 Plugin installed version: " +installedVersion+ " doesn't match this version: "+version)
            return False


    # check to see if the plugin files are all installed
    def isInstalled(self):
        dremel3D20DefFile = os.path.join(self.local_printer_def_path,"Dremel3D20.def.json")
        dremelPLAfile = os.path.join(self.local_materials_path,"dremel_pla.xml.fdm_material")
        dremelQualityDir = os.path.join(self.local_quality_path,"dremel_3d20")

        # if some files are missing then return that this plugin as not installed
        if not os.path.isfile(dremel3D20DefFile):
            return False
        if not os.path.isfile(dremelPLAfile):
            return False
        if not os.path.isdir(dremelQualityDir):
            return False

        # if everything is there, return True
        return True

    # Install the plugin files.
    def installPluginFiles(self):
        Logger.log("i", "Dremel 3D20 Plugin installing printer files")

        try:
            restartRequired = False
            zipdata = os.path.join(self.this_plugin_path,"Dremel3D20.zip")
            with zipfile.ZipFile(zipdata, "r") as zip_ref:
                for info in zip_ref.infolist():
                    Logger.log("i", "Dremel 3D20 Plugin: found in zipfile: " + info.filename )
                    folder = None
                    if info.filename.endswith(".json"):
                        folder = self.local_printer_def_path
                    elif info.filename.endswith("fdm_material"):
                        folder = self.local_materials_path
                    elif info.filename.endswith(".cfg"):
                        folder = self.local_quality_path
                    # TODO: figure out a way to install the stl file
                    # currently Cura doesn't have a local "meshes" folder
                    # and on windows writing to Program Files requires admin
                    # access
                    elif info.filename.endswith(".stl"):
                        folder = self.local_meshes_path

                    if folder is not None:
                        extracted_path = zip_ref.extract(info.filename, path = folder)
                        permissions = os.stat(extracted_path).st_mode
                        os.chmod(extracted_path, permissions | stat.S_IEXEC) #Make these files executable.
                        Logger.log("i", "Dremel 3D20 Plugin installing " + info.filename + " to " + extracted_path)
                        restartRequired = True

            if restartRequired and self.isInstalled():
                # only show the message if the user called this after having already uninstalled
                if Preferences.getInstance().getValue("Dremel3D20/install_status") is not "unknown":
                    message = Message(catalog.i18nc("@info:status", "Dremel 3D20 files installed.  Please Restart cura to complete installation"))
                    message.show()
                # either way, the files are now installed, so set the prefrences value
                Preferences.getInstance().setValue("Dremel3D20/install_status", "installed")
                Preferences.getInstance().setValue("Dremel3D20/curr_version",version)
                Preferences.getInstance().writeToFile(Resources.getStoragePath(Resources.Preferences, Application.getInstance().getApplicationName() + ".cfg"))

        except: # Installing a new plugin should never crash the application.
            Logger.logException("d", "An exception occurred in Dremel 3D20 Plugin while installing the files")
            message = Message(catalog.i18nc("@info:status", "Dremel 3D20 Plugin experienced an error installing the files"))
            message.show()

    # Uninstall the plugin files.
    def uninstallPluginFiles(self):
        Logger.log("i", "Dremel 3D20 Plugin uninstalling plugin files")
        restartRequired = False
        # remove the printer definition file
        try:
            dremel3D20DefFile = os.path.join(self.local_printer_def_path,"Dremel3D20.def.json")
            if os.path.isfile(dremel3D20DefFile):
                Logger.log("i", "Dremel 3D20 Plugin removing printer definition from " + dremel3D20DefFile)
                os.remove(dremel3D20DefFile)
                restartRequired = True
        except: # Installing a new plugin should never crash the application.
            Logger.logException("d", "An exception occurred in Dremel 3D20 Plugin while uninstalling files")

        # remove the pla material file
        try:
            dremelPLAfile = os.path.join(self.local_materials_path,"dremel_pla.xml.fdm_material")
            if os.path.isfile(dremelPLAfile):
                Logger.log("i", "Dremel 3D20 Plugin removing dremel pla file from " + dremelPLAfile)
                os.remove(dremelPLAfile)
                restartRequired = True
        except: # Installing a new plugin should never crash the application.
            Logger.logException("d", "An exception occurred in Dremel 3D20 Plugin while uninstalling files")

        # remove the platform file (on windows this doesn't work because it needs admin rights)
        try:
            dremelSTLfile = os.path.join(self.local_meshes_path,"dremel_3D20_platform.stl")
            if os.path.isfile(dremelSTLfile):
                Logger.log("i", "Dremel 3D20 Plugin removing dremel stl file from " + dremelSTLfile)
                os.remove(dremelSTLfile)
                restartRequired = True
        except: # Installing a new plugin should never crash the application.
            Logger.logException("d", "An exception occurred in Dremel 3D20 Plugin while uninstalling files")

        # remove the folder containing the quality files
        try:
            dremelQualityDir = os.path.join(self.local_quality_path,"dremel_3d20")
            if os.path.isdir(dremelQualityDir):
                Logger.log("i", "Dremel 3D20 Plugin removing dremel quality files from " + dremelQualityDir)
                shutil.rmtree(dremelQualityDir)
                restartRequired = True
        except: # Installing a new plugin should never crash the application.
            Logger.logException("d", "An exception occurred in Dremel 3D20 Plugin while uninstalling files")

        # prompt the user to restart
        if restartRequired:
            Preferences.getInstance().setValue("Dremel3D20/install_status", "uninstalled")
            Preferences.getInstance().writeToFile(Resources.getStoragePath(Resources.Preferences, Application.getInstance().getApplicationName() + ".cfg"))
            message = Message(catalog.i18nc("@info:status", "Dremel 3D20 files uninstalled.  Please Restart cura to complete installation"))
            message.show()
    def setSelectScreenshot(self):
        if Preferences.getInstance().getValue("Dremel3D20/select_screenshot"):
            Preferences.getInstance().setValue("Dremel3D20/select_screenshot",False)
            Logger.log("i", "DremelGcodewriter Plugin manual screenshot selection disabled")
            message = Message(catalog.i18nc("@info:status", "Manual screenshot selection disabled when exporting g3drem files"))
            message.show()
        else:
            Preferences.getInstance().setValue("Dremel3D20/select_screenshot",True)
            Logger.log("i", "Dremel3D20 Plugin manual screenshot selection enabled")
            message = Message(catalog.i18nc("@info:status", "Manual screenshot selection enabled when exporting g3drem files"))
            message.show()
        Preferences.getInstance().writeToFile(Resources.getStoragePath(Resources.Preferences, Application.getInstance().getApplicationName() + ".cfg"))

    #  find_images_with_name tries to find an image file with the same name in the same direcory where the
    #  user is writing out the g3drem file.  If it finds an image then it reuturns the filename so that the
    #  image can be used for a preview
    def find_images_with_name(self, gcodefilename):
        # get the path where the user requested the .g3drem file save to go
        savepth, savefname = os.path.split(os.path.realpath(gcodefilename))
        # get the path+filename-extension i.e. "/usr/home/llama.g3drem" would split to "/usr/home/llama"  and ".g3drem"
        gcode_path_and_name, file_extension = os.path.splitext(os.path.realpath(gcodefilename))
        Logger.log("i", "Dremel GCode Writer looking for image with name " + gcode_path_and_name +".[jpg,png,gif,bmp]")
        # get a list of all files in the save directory so that we can traverse over them
        allfiles = [os.path.join(savepth, f) for f in os.listdir(savepth) if os.path.isfile(os.path.join(savepth, f))]
        # search over all the files to see if we find a valid image
        for currfile in allfiles:
            # split the current file name in the same way ("/usr/home/llama.g3drem" would split to "/usr/home/llama"  and ".g3drem")
            currfile_path_and_name, currfile_extension = os.path.splitext(os.path.realpath(currfile))
            # compare the path+filename section (i.e. compare /usr/home/llama to /usr/home/camel) if they match then check to see
            # if the extension is a valid image format. and if so, return it.
            if gcode_path_and_name.lower() == currfile_path_and_name.lower():
                if currfile_extension.lower() in [".png",".jpg",".jpeg",".gif",".bmp"]:
                    Logger.log("i", "Dremel GCode Writer - using image: " + currfile.lower() )
                    return currfile
        # if no image with a matching name was found, return
        Logger.log("d", "Dremel GCode Writer did not find any appropriate image files")
        return None

    def getBitmapBytes(self,stream):
        # get the primary screen
        screen = QApplication.primaryScreen()
        bmpError = False

        if Preferences.getInstance().getValue("Dremel3D20/select_screenshot"):
            image_with_same_name, _ = QFileDialog.getOpenFileName(None, 'Open file', Preferences.getInstance().getValue("Dremel3D20/last_screenshot_folder"),"Image files (*.jpg *.gif *.png *.bmp *.jpeg)")
            Logger.log("d", "Dremel GCode Writer using image for screenshot: " + image_with_same_name)
            Preferences.getInstance().setValue("Dremel3D20/last_screenshot_folder",str(os.path.dirname(image_with_same_name)))
        else:
            image_with_same_name = self.find_images_with_name(stream.name)

        # find image with same name as saved filename
        if image_with_same_name is not None:
            try:

                pixMpImg = QImage()
                reader = QImageReader(image_with_same_name)
                reader.setScaledSize(QSize(80,60))
                reader.read(pixMpImg)
                # now prepare to write the bitmap
                ba = QByteArray()
                bmpData = QBuffer(ba)
                if not bmpData.open(QIODevice.WriteOnly):
                    Logger.log("d", "Dremel GCode Writer - Could not open qbuffer - using generic cura icon instead")
                    #bmpError = True
                # copy the raw image data to bitmap image format in memory
                if not pixMpImg.save(bmpData, "BMP"):
                    Logger.log("d", "Dremel GCode Writer - Could not save pixmap - trying to take screenshot instead")
                    #bmpError = True
                # finally write the bitmap to the g3drem file
                if not bmpError:
                    return ba

                #imfile = QPixmap(image_with_same_name)
                #if imfile.isNull():
                #    Logger.log("d", "Dremel GCode Writer could not open." + image_with_same_name +" - using generic cura icon instead")
                #    #bmpError = True
                #else:
                #    Logger.log("d", "Dremel GCode Writer scaling " + image_with_same_name)
                #    pixMpImg = imfile.scaled(80, 60, Qt.KeepAspectRatioByExpanding).copy(QRect(0,0,80,60))
                #    Logger.log("d", "Dremel GCode Writer scaled " + image_with_same_name)
                #    if pixMpImg.width() is not 80 or pixMpImg.height() is not 60:
                #        Logger.log("d", "Dremel GCode Writer - error in size of screenshot - using generic cura icon instead")
                #        #bmpError = True
                #    else:
                #        # now prepare to write the bitmap
                #        ba = QByteArray()
                #        bmpData = QBuffer(ba)
                #        if not bmpData.open(QIODevice.WriteOnly):
                #            Logger.log("d", "Dremel GCode Writer - Could not open qbuffer - using generic cura icon instead")
                #            #bmpError = True
                #        # copy the raw image data to bitmap image format in memory
                #        if not pixMpImg.save(bmpData, "BMP"):
                #            Logger.log("d", "Dremel GCode Writer - Could not save pixmap - trying to take screenshot instead")
                #            #bmpError = True
                #        # finally write the bitmap to the g3drem file
                #        if not bmpError:
                #            return ba
            except:
                Logger.log("e", "Dremel GCode Writer - Could not use pixmap - trying ")

        if screen is not None:
            # wait for half a second because linux takes a bit of time before
            # it closes the file selection window, and we don't want that in the
            # screenshot
            time.sleep(0.5)

            # get the height of the topbar and width of the left and right sidebar
            sidebarwidth = Application.getInstance().getTheme().getSize("sidebar").width()
            buttonwidth = Application.getInstance().getTheme().getSize("button_icon").width()
            marginwidth = Application.getInstance().getTheme().getSize("sidebar_margin").width()
            topbarheight = Application.getInstance().getTheme().getSize("sidebar_header").height()
            marginheight = Application.getInstance().getTheme().getSize("sidebar_header_mode_toggle").height()
            buttonright = buttonwidth + marginwidth
            topbarbottom = topbarheight + marginheight

            # get the main window ID
            winId = Application.getInstance().getMainWindow().winId()
            if winId is not None:
                # calculate the appropriate rectangle to grab
                rectWidth = Application.getInstance().getMainWindow().width() - sidebarwidth
                rectHeight = Application.getInstance().getMainWindow().height() - topbarbottom
                if buttonright < 0 or topbarbottom < 0 or rectWidth < 0 or rectWidth > Application.getInstance().getMainWindow().width() or rectHeight < 0 or rectHeight > Application.getInstance().getMainWindow().height():
                    Logger.log("d", "Dremel GCode Writer - error in calculated rectangles for screenshot - using generic cura icon instead")
                    bmpError = True
                # grab a screenshot of the main window
                screenImg = screen.grabWindow(winId, buttonright, topbarbottom, rectWidth, rectHeight)
                #####################################################
                # remove this section when done debugging linux issue
                # test the raw screenshot to see if it is all zeros
                scrI = screenImg.toImage()
                if scrI.pixel(20,10) == qRgb(0,0,0) and scrI.pixel(40,10) == qRgb(0,0,0) and scrI.pixel(60,10) == qRgb(0,0,0) and scrI.pixel(40,30) == qRgb(0,0,0) and scrI.pixel(20,50) == qRgb(0,0,0) and scrI.pixel(40,50) == qRgb(0,0,0) and scrI.pixel(60,50) == qRgb(0,0,0):
                    Logger.log("d", "Dremel GCode Writer - Black screenshot detected - using generic cura icon instead")
                    bmpError = True
                # end of remove this section
                #####################################################
                pixMpImg = screenImg.scaled(80, 60, Qt.KeepAspectRatioByExpanding).copy(QRect(0,0,80,60))
                # validate the size of the image since the Dremel firmware uses hardcoded offsets
                if pixMpImg.width() is not 80 or pixMpImg.height() is not 60:
                    Logger.log("d", "Dremel GCode Writer - error in size of screenshot - using generic cura icon instead")
                    bmpError = True
                # spot check the pixels of the image to see if they're all zeros
                pmI = pixMpImg.toImage()
                if pmI.pixel(20,10) == qRgb(0,0,0) and pmI.pixel(40,10) == qRgb(0,0,0) and pmI.pixel(60,10) == qRgb(0,0,0) and pmI.pixel(40,30) == qRgb(0,0,0) and pmI.pixel(20,50) == qRgb(0,0,0) and pmI.pixel(40,50) == qRgb(0,0,0) and pmI.pixel(60,50) == qRgb(0,0,0):
                    Logger.log("d", "Dremel GCode Writer - Black screenshot detected after scaling - using generic cura icon instead")
                    bmpError = True

                # now prepare to write the bitmap
                ba = QByteArray()
                bmpData = QBuffer(ba)
                if not bmpData.open(QIODevice.WriteOnly):
                    Logger.log("d", "Dremel GCode Writer - Could not open qbuffer - using generic cura icon instead")
                    bmpError = True
                # copy the raw image data to bitmap image format in memory
                if not pixMpImg.save(bmpData, "BMP"):
                    Logger.log("d", "Dremel GCode Writer - Could not save pixmap - using generic cura icon instead")
                    bmpError = True
                # finally write the bitmap to the g3drem file
                if not bmpError:
                    return ba
            else:
                Logger.log("d", "Dremel GCode Writer - Could not get window id - using generic cura icon instead")
                bmpError = True
        else:
            Logger.log("d", "Dremel GCode Writer - Could not get screen - using generic cura icon instead")
            bmpError = True

        if bmpError:
            # if an error ocurred when grabbing a screenshot write the generic cura icon instead
            bmpBytes = struct.pack("{}B".format(len(self.curaIconBmpData)), *self.curaIconBmpData)
            return bmpBytes

        ##  Performs the writing of the dremel header and gcode - for a technical
        ##  breakdown of the dremel g3drem file format see the following page:
        ##  https://github.com/timmehtimmeh/Cura-Dremel-3D20-Plugin/blob/master/README.md#technical-details-of-the-g3drem-file-format
    def write(self, stream, nodes, mode = MeshWriter.OutputMode.BinaryMode):
        if mode != MeshWriter.OutputMode.BinaryMode:
            Logger.log("e", "Dremel GCode Writer does not support non-binary mode.")
            return False
        if stream is None:
            Logger.log("e", "Dremel GCode Writer - Error writing - no output stream.")
            return False

        g3dremHeader = G3DremHeader.G3DremHeader()

        global_container_stack = Application.getInstance().getGlobalContainerStack()
        print_information = Application.getInstance().getPrintInformation()
        extruders = [global_container_stack]
        extruder = extruders[0]
        # get estimated length
        length = int(print_information.materialLengths[int(extruder.getMetaDataEntry("position", "0"))]*1000)
        g3dremHeader.setMaterialLen(length)

        # get infill percentage
        g3dremHeader.setInfillPct(int(global_container_stack.getProperty("infill_sparse_density", "value")))

        # set print temperature in header
        g3dremHeader.setExtruderTemp(int(extruder.getProperty("material_print_temperature", "value")))

        # get the estimated number of seconds that the print will take
        seconds = int(print_information.currentPrintTime.getDisplayString(DurationFormat.Format.Seconds))
        g3dremHeader.setEstimatedTime(length)

        # set the thumbnail
        g3dremHeader.setThumbnailBitmap(self.getBitmapBytes(stream))

        # finally, write the header
        if not g3dremHeader.writeHeader(stream):
            Logger.log("e", "Error Writing Dremel Header.")
            return False

        # now that the header is written, write the ascii encoded gcode
        Logger.log("i", "Finished Writing Dremel Header.")
        active_build_plate = Application.getInstance().getBuildPlateModel().activeBuildPlate
        scene = Application.getInstance().getController().getScene()
        gcode_dict = getattr(scene, "gcode_dict")
        if not gcode_dict:
            return False
        gcode_list = gcode_dict.get(active_build_plate, None)
        if gcode_list is not None:
            for gcode in gcode_list:
                stream.write(gcode.encode())
            # Serialise the current container stack and put it at the end of the file.
            settings = self._serialiseSettings(Application.getInstance().getGlobalContainerStack())
            stream.write(settings.encode())
            return True

        return False


    ##  Create a new container with container 2 as base and container 1 written over it.
    def _createFlattenedContainerInstance(self, instance_container1, instance_container2):
        flat_container = InstanceContainer(instance_container2.getName())
        if instance_container1.getDefinition():
            flat_container.setDefinition(instance_container1.getDefinition())
        else:
            flat_container.setDefinition(instance_container2.getDefinition())
        flat_container.setMetaData(copy.deepcopy(instance_container2.getMetaData()))

        for key in instance_container2.getAllKeys():
            flat_container.setProperty(key, "value", instance_container2.getProperty(key, "value"))

        for key in instance_container1.getAllKeys():
            flat_container.setProperty(key, "value", instance_container1.getProperty(key, "value"))

        return flat_container


    ##  Serialises a container stack to prepare it for writing at the end of the
    #   g-code.
    #
    #   The settings are serialised, and special characters (including newline)
    #   are escaped.
    #
    #   \param settings A container stack to serialise.
    #   \return A serialised string of the settings.
    def _serialiseSettings(self, stack):
        prefix = ";SETTING_" + str(Dremel3D20.version) + " "  # The prefix to put before each line.
        prefix_length = len(prefix)

        container_with_profile = stack.qualityChanges
        if container_with_profile.getId() == "empty_quality_changes":
            Logger.log("e", "No valid quality profile found, not writing settings to GCode!")
            return ""

        flat_global_container = self._createFlattenedContainerInstance(stack.getTop(), container_with_profile)
        # If the quality changes is not set, we need to set type manually
        if flat_global_container.getMetaDataEntry("type", None) is None:
            flat_global_container.addMetaDataEntry("type", "quality_changes")

        # Ensure that quality_type is set. (Can happen if we have empty quality changes).
        if flat_global_container.getMetaDataEntry("quality_type", None) is None:
            flat_global_container.addMetaDataEntry("quality_type", stack.quality.getMetaDataEntry("quality_type", "normal"))

        serialized = flat_global_container.serialize()
        data = {"global_quality": serialized}

        for extruder in sorted(stack.extruders.values(), key = lambda k: k.getMetaDataEntry("position")):
            extruder_quality = extruder.qualityChanges
            if extruder_quality.getId() == "empty_quality_changes":
                Logger.log("w", "No extruder quality profile found, not writing quality for extruder %s to file!", extruder.getId())
                continue
            flat_extruder_quality = self._createFlattenedContainerInstance(extruder.getTop(), extruder_quality)
            # If the quality changes is not set, we need to set type manually
            if flat_extruder_quality.getMetaDataEntry("type", None) is None:
                flat_extruder_quality.addMetaDataEntry("type", "quality_changes")

            # Ensure that extruder is set. (Can happen if we have empty quality changes).
            if flat_extruder_quality.getMetaDataEntry("extruder", None) is None:
                flat_extruder_quality.addMetaDataEntry("extruder", extruder.getBottom().getId())

            # Ensure that quality_type is set. (Can happen if we have empty quality changes).
            if flat_extruder_quality.getMetaDataEntry("quality_type", None) is None:
                flat_extruder_quality.addMetaDataEntry("quality_type", extruder.quality.getMetaDataEntry("quality_type", "normal"))
            extruder_serialized = flat_extruder_quality.serialize()
            data.setdefault("extruder_quality", []).append(extruder_serialized)

        json_string = json.dumps(data)

        # Escape characters that have a special meaning in g-code comments.
        pattern = re.compile("|".join(Dremel3D20.escape_characters.keys()))

        # Perform the replacement with a regular expression.
        escaped_string = pattern.sub(lambda m: Dremel3D20.escape_characters[re.escape(m.group(0))], json_string)

        # Introduce line breaks so that each comment is no longer than 80 characters. Prepend each line with the prefix.
        result = ""

        # Lines have 80 characters, so the payload of each line is 80 - prefix.
        for pos in range(0, len(escaped_string), 80 - prefix_length):
            result += prefix + escaped_string[pos : pos + 80 - prefix_length] + "\n"
        return result

    # cura icon in bmp format in binary
    curaIconBmpData = [0x42,0x4D,0x78,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x36,0x00,0x00,0x00,0x28,0x00,
            0x00,0x00,0x50,0x00,0x00,0x00,0x3C,0x00,0x00,0x00,0x01,0x00,0x18,0x00,0x00,0x00,
            0x00,0x00,0x42,0x38,0x00,0x00,0xC3,0x0E,0x00,0x00,0xC3,0x0E,0x00,0x00,0x00,0x00,
            0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xF3,0xDC,0x9B,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xF3,0xDC,0x9B,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xF3,0xDC,0x9B,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xF3,
            0xDC,0x9B,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xF3,0xDC,0x9B,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xF3,0xDC,0x9B,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xF3,0xDC,0x9B,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xF3,0xDC,0x9B,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xF3,0xDC,
            0x9B,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xF3,0xDC,0x9B,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xF3,0xDC,0x9B,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xF3,0xDC,0x9B,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE4,
            0xAD,0x16,0xEC,0xC4,0x57,0xF2,0xD7,0x8E,0xF6,0xE4,0xB3,0xF8,0xEB,0xC6,0xFA,0xEF,
            0xD1,0xFA,0xEF,0xD1,0xFA,0xEF,0xD1,0xFA,0xEF,0xD1,0xFA,0xEF,0xD1,0xFA,0xEF,0xD1,
            0xFA,0xEF,0xD1,0xFA,0xEF,0xD1,0xFA,0xEF,0xD1,0xFA,0xEF,0xD1,0xFA,0xEF,0xD1,0xFA,
            0xEF,0xD1,0xED,0xC7,0x62,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xF3,0xDC,0x9B,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE6,0xB3,0x29,0xF4,0xDC,0x9D,0xFE,
            0xFB,0xF5,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xEF,0xCE,0x76,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xF4,0xDB,0x9B,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xEF,0xCE,0x75,0xFE,0xFC,0xF5,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xEF,0xCE,0x76,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xF4,0xDB,0x9B,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xAA,0x0E,0xF4,0xDD,0xA0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xEF,0xCE,0x76,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xF3,0xDC,0x9B,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xF2,0xD8,0x90,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xEF,0xCE,0x76,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xEB,0xC2,0x52,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xEF,0xCE,0x76,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xAA,0x10,0xFB,0xF3,0xDD,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xEF,0xCE,0x76,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xED,0xC6,0x5F,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFE,0xFC,0xF4,0xDE,0xA2,0xEA,0xBF,0x49,0xE5,0xAF,0x1E,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xF7,0xE6,0xB9,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFD,
            0xFA,0xF1,0xEA,0xBE,0x48,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE4,0xAB,0x12,0xFE,0xFD,0xF8,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xED,
            0xC6,0x5F,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE9,0xBB,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFA,0xEF,0xD2,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xED,0xC7,0x60,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF1,0xD4,0x86,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xEF,0xCE,0x76,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xED,0xC6,0x5F,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xEF,0xCE,0x76,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xEC,0xC4,0x57,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xEE,0xCC,0x6F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xEE,0xCA,0x6A,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xEB,0xC2,0x53,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF4,0xDD,0xA0,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE7,0xB4,0x2C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFD,0xFA,0xF2,0xE5,
            0xAE,0x1A,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFC,0xF6,0xE5,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF5,
            0xE1,0xAA,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xF3,0xDB,0x98,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xF6,0xE2,0xAD,0xE5,0xB0,0x21,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE8,0xB8,0x36,0xFF,0xFF,0xFE,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFC,0xF6,0xF6,0xE4,0xB4,0xF2,0xD6,0x8B,0xEF,0xCE,
            0x76,0xEF,0xCE,0x76,0xEF,0xCE,0x76,0xEF,0xCE,0x76,0xEF,0xCE,0x76,0xEF,0xCE,0x76,
            0xEF,0xCE,0x76,0xEF,0xCE,0x76,0xEF,0xCE,0x76,0xEF,0xCE,0x76,0xEF,0xCE,0x76,0xEF,
            0xCE,0x76,0xE8,0xB9,0x3A,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF3,0xDC,0x9B,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xF5,0xE1,0xAA,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xEF,0xCE,0x76,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF4,0xDC,0x9B,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE5,0xB0,0x20,
            0xFC,0xF7,0xE9,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xEF,0xCE,0x76,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF4,0xDC,0x9B,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE9,0xBD,0x43,0xFE,0xFC,0xF5,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xEF,0xCE,0x76,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF3,
            0xDC,0x9B,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE9,0xBD,0x43,0xFC,0xF7,0xE8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xEF,0xCE,0x76,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xF4,0xDC,0x9B,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE6,0xB1,0x22,0xF5,0xE1,0xAB,0xFF,0xFF,0xFE,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xEF,0xCE,0x76,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xF4,0xDC,0x9B,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE8,0xB7,0x34,0xF3,
            0xDA,0x95,0xFB,0xF4,0xE1,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xEF,0xCE,0x76,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF3,0xDC,0x9B,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE6,0xB1,0x23,0xEA,0xBE,0x47,0xEC,0xC4,0x58,0xED,0xC9,
            0x67,0xED,0xC9,0x67,0xED,0xC9,0x67,0xED,0xC9,0x67,0xED,0xC9,0x67,0xED,0xC9,0x67,
            0xED,0xC9,0x67,0xED,0xC9,0x67,0xED,0xC9,0x67,0xED,0xC9,0x67,0xED,0xC9,0x67,0xED,
            0xC9,0x67,0xE8,0xB7,0x33,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF4,0xDC,0x9B,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF4,0xDC,
            0x9B,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xF3,0xDC,0x9B,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xF4,0xDC,0x9B,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF4,0xDC,0x9B,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF3,0xDC,0x9B,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF4,0xDC,0x9B,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xF4,0xDC,0x9B,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xF3,0xDC,0x9B,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,
            0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,
            0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,
            0xE3,0xA9,0x0C,0xE3,0xA9,0x0C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00]
